/*probleme 1 */
ALGORITHM solution1
VAR
    set1,set2 : ARRAY_OF INTEGER[20];
    i,j : INTEGER;
    sum : INTEGER :=  0;
    found : BOOLEAN;
BEGIN
    // reading elements in the two sets

    // Compare each element of set one with the second set 
    // and if element is not present then add that element to sum.

    FOR i FROM 0 TO set1.length-1 DO
        found := FALSE;
        FOR j FROM 0 TO set2.length-1 DO
            IF(set1[i] = set2[j]) THEN
                found := TRUE;
                BREAK;
            END
        END_FOR
        IF (NOT found) THEN
            sum := sum + set1[i];
        END_IF
    END_FOR

    //Then do the vice versa to add elements from the second set. 
    FOR i FROM 0 TO set2.length-1 DO
        found := FALSE;
        FOR j FROM 0 TO set1.length-1 DO
            IF(set2[i] = set1[j]) THEN
                found := TRUE;
                BREAK;
            END
        END_FOR                                  
        IF (NOT found) THEN
            sum := sum + set2[i];
        END_IF
    END_FOR

    Write(sum);
END

ALGORITHM solution2
VAR
    set1,set2 : ARRAY_OF INTEGER[20];
    set_keys : ARRAY_OF INTEGER[40];
    dict := HASH_TABLE<INTEGER,INTEGER>;
    i, count : INTEGER;
    sum : INTEGER := 0;
BEGIN
   
    FOR i FROM 0 TO set1.length -1 STEP 1  DO
        IF (dict.lookup(set1[i]) = TRUE) THEN
            count := dict.get(set1[i]);
            dict.insert(set1[i],count+1);
        ELSE
            dict.insert(set1[i],1);
        END_IF
    END_FOR

    FOR i FROM 0 TO set2.length -1 STEP 1  DO
        IF (dict.lookup(set2[i]) = TRUE) THEN
            count := dict.get(set2[i]);
            dict.insert(set2[i],count+1);
        ELSE
            dict.insert(set2[i],1);
        END_IF
    END_FOR

    //get sum of distinct elements
    set_keys := dict.getKeys();
    FOR i FROM 0 TO set_keys.length -1 STEP 1  DO
        IF (dict.get(set_keys[i]) = 1) THEN
            sum := sum +set_keys[i];
        END_IF
    END_FOR
END


/*probleme2*/
ALGORITHM algorithm_name
VAR
   tab1 : ARRAY_OF INTEGER[100];
    tab2 : ARRAY_OF INTEGER[100];
    sum1:INTEGER:=0;
     sum2:INTEGER:=0;
      sum:INTEGER:=0;
    i:INTEGER:=0;
    j:INTEGER:=0;
BEGIN
   FOR i FROM 0 TO tab1.length DO
    FOR j FROM 0 TO tab2.length DO
   IF (tab1[i]=tab2[j]) THEN
        sum1+=tab1[i]
   END_IF
    END_FOR
    END_FOR
    FOR j FROM 0 TO tab2.length DO
    FOR i FROM 0 TO tab1.length DO
   IF (tab1[i]=tab2[j]) THEN
        sum2+=tab2[j]
END_IF
    END_FOR
    END_FOR
  sum:=sum1+sum2;  
 write("la somme des elements distincts est",sum);
END
/*hash table*/
ALGORITHM problem1-htable
VAR
   tab1 : ARRAY_OF INTEGER[100];
    tab2 : ARRAY_OF INTEGER[100];
    sum:INTEGER:=0;
    i:INTEGER:=0;
    j:INTEGER:=0;
    k:INTEGER:=0;
    htab : HASH_TABLE<INTEGER,INTEGER>;
   tabkeys:ARRAY_OF INTEGER[100];
   tabvalues:ARRAY_OF INTEGER[100];
BEGIN
    FOR i FROM 0 TO tab1.length DO
   FOR j FROM 0 TO tab2.length DO
    IF (tab1[i]=tab2[j]) THEN
     htab.insert(1,tab1[i]);
    END_IF
    END_FOR
    IF (j=tab2.length) THEN
    htab.insert(0,tab1[i]);
    END_IF
    END_FOR
FOR j FROM 0 TO tab2.length DO
   FOR i FROM 0 TO tab1.length DO
    IF (tab1[i]=tab2[j]) THEN
     htab.insert(1,tab2[j]);
    END_IF
    END_FOR
    IF (i=tab1.length) THEN
    htab.insert(0,tab2[j]);
    END_IF
    END_FOR
     tabkeys=htab.getKeys();
     tabvalues=htab.getValues();
     FOR k FROM 0 TO tabKeys.length DO
       IF(tabKeys[k]= 1) THEN 
       sum+=tabvalues[k];
    END_IF
    END_FOR
    write("la somme des elements distincts est",sum);
END
